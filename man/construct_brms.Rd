% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/test-helper.R
\name{construct_brms}
\alias{construct_brms}
\title{Construct BRMS family for simple linear y ~ 1 model.}
\usage{
construct_brms(
  n_data_sampels,
  intercept,
  aux_par,
  rng_link,
  family,
  rng,
  seed = NULL,
  data_threshold = NULL,
  suppress_output = TRUE
)
}
\arguments{
\item{n_data_sampels}{How many samples per chain. Positive integer scalar.}

\item{intercept}{Intercept data argument, real scalar.}

\item{aux_par}{aux_par argument of each distribution.}

\item{rng_link}{Link function pointer used data. For positive bounded uses exp as example.}

\item{family}{BRMS family under test.}

\item{rng}{function pointer of bespoke RNG for the family to be tested.}

\item{seed}{Seed argument, so that input data is always the same in each test.
BRMS test does not test RNG and is not guarateed to fit on all data.
Positive Integer scalar, Default = NA will do nothing. Seed is stored before and restored after.}

\item{data_threshold}{Usually unused. But in rare cases, data too close at the boundary may cause trouble.
If so, set a two entry real vector c(lower, uppper). If one of them is NA, the data will not be capped for that boundary.
Default = Null, will be in R terms "invisible" and will not cap any input data.}

\item{suppress_output}{Scalar Boolean argument. Default = TRUE supresses all prints.
Only exceptions will be printed. For testing reasons, to not spam the test-window.}
}
\value{
BRMS model for the specified family.
}
\description{
Construct BRMS family for simple linear y ~ 1 model.
}
\examples{
posterior_fit <- bayesfam:::construct_brms(
  n_data_sampels = 1000,
  intercept = 5.0,
  aux_par = 2.0,
  rng_link = identity,
  family = betaprime,
  rng = rbetaprime
)
plot(posterior_fit)
print("compare b_Intercept to log(intercept) in case of betaprime. log(5) = 1.61")
}
